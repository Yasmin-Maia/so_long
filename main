/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: yasmin <yasmin@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/04/15 13:21:44 by yasmin            #+#    #+#             */
/*   Updated: 2025/04/24 18:44:42 by yasmin           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "so_long.h"

void load_sprites(t_game *game) 
{
    int w, h;

    // Carregar os sprites
    game->player = mlx_xpm_file_to_image(game->mlx, "sprites/player.xpm", &w, &h);
    game->wall = mlx_xpm_file_to_image(game->mlx, "sprites/wall.xpm", &w, &h);
    game->collect = mlx_xpm_file_to_image(game->mlx, "sprites/blood_vial.xpm", &w, &h);
    game->exit = mlx_xpm_file_to_image(game->mlx, "sprites/exit.xpm", &w, &h);
    game->floor = mlx_xpm_file_to_image(game->mlx, "sprites/mystic_floor.xpm", &w, &h);
}

void draw_map(t_game *game)
{
    int x;
    int y;

    y = 0;
    while (game->map[y] != NULL)
    {
        x = 0;
        while (game->map[y][x] != '\0')
        {
            if (game->map[y][x] == '1')
                mlx_put_image_to_window(game->mlx, game->win, game->wall, x * TILE, y * TILE);
            else if (game->map[y][x] == 'C')
                mlx_put_image_to_window(game->mlx, game->win, game->collect, x * TILE, y * TILE);
            else if (game->map[y][x] == 'E')
                mlx_put_image_to_window(game->mlx, game->win, game->exit, x * TILE, y * TILE);
            else if (game->map[y][x] == 'P')
                mlx_put_image_to_window(game->mlx, game->win, game->player, x * TILE, y * TILE);
            else
                mlx_put_image_to_window(game->mlx, game->win, game->floor, x * TILE, y * TILE);
            x++;
        }
        y++;
    }
}


int main(int ac, char **av) {
    t_game game;
    int i = 0;

    // Verifica se o número de argumentos está correto
    if (ac != 2)
        error_exit("error");

    // Lê o mapa
    game.map = read_map(av[1]);

    // Valida o mapa
    if (!validate_map(game.map))
        error_exit("Invalid map");

    // Inicializa a MinilibX
    game.mlx = mlx_init();
    
    // Cria a janela
    game.win = mlx_new_window(game.mlx, 800, 600, "So Long");

    // Carrega os sprites
    load_sprites(&game);

    // Aqui você pode visualizar o mapa no terminal se quiser
    while (game.map[i]) {
        ft_putstr_fd(game.map[i], 1);
        i++;
    }

    // Desenha o mapa na janela
    draw_map(&game);

    // O loop principal do MinilibX para manter a janela aberta
    mlx_loop(game.mlx);

    return (0);
}
